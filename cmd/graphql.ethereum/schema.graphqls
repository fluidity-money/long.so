
type Query {
  seawaterPools: [SeawaterPool!]!

  getPool(address: String!): SeawaterPool
  getPoolPositions(address: String!): [SeawaterPosition!]
  getPosition(id: String!): SeawaterPosition
  getWallet(address: String!): Wallet
}

type Mutation {
  setVolumeYieldPriceAndTVLForLastHour: ID
}

type SeawaterPool {
  id: ID! # address

  address: String!

  volumeOverTimeDaily: [PairAmount!]
  volumeOverTimeMonthly: [PairAmount!]
  volumeOverTimeYearly: [PairAmount!]

  yieldOverTimeDaily: [PairAmount!]!
  yieldOverTimeMonthly: [PairAmount!]
  yieldOverTimeYearly: [PairAmount!]

  priceOverTimeDaily: [String!]
  priceOverTimeMonthly: [String!]
  priceOverTimeYearly: [String!]

  tvlOverTimeDaily: [String!]
  tvlOverTimeMonthly: [String!]
  tvlOverTimeYearly: [String!]

  earnedFeesAPRFUSDC: String!
  earnedFeesAPRToken1: String!

  liquidityIncentives: Amount!
  superIncentives: Amount!
  utilityIncentives: [UtilityIncentive!]!

  positions: [SeawaterPosition!]!

  liquidity: [SeawaterLiquidity!]!
}

"""
SeawaterLiquidity is like SeawaterPosition, though it's an aggregation for easy use.
"""
type SeawaterLiquidity {
  id: ID! # pool:lower:upper

  lower: String!
  upper: String!
  liquidity: PairAmount!
  positions: [SeawaterPosition!]!
}

type SeawaterPosition {
  id: ID! # positionId (pos:positionId)

  positionId: String!
  owner: Wallet!
  pool: SeawaterPool!
  lower: String!
  upper: String!
  liquidity: PairAmount!
}

type PairAmount {
  fusdc: Amount!
  token1: Amount!
}

type Amount {
  valueUnscaled: String!
  valueScaled: String!
  valueUsd: String!
}

type Wallet {
  id: ID! # address

  address: String!
  balances: [TokenBalance!]!
  positions: [SeawaterPosition!]
}

type TokenBalance {
  token: Token!
  balance: Amount!
}

type Token {
  name: String!
  totalSupply: String!
  decimals: String!
}

type UtilityIncentive {
  amountGivenOut: String!
  maximumAmount: String!
}
